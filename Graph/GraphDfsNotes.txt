
**DFS
-> (Pre,post,Inorder)  traversal of tree is also called DFS graph .
-> it is implented using stack or recursions
Depth First Traversal is a traversal technique/algorithm, used to traverse 
through all the nodes in the given graph.

It starts traversal through any one of its neighbour nodes and explores the 
farthest possible node in each path/branch and then starts Back-tracking.

Backtracking happens when the DFS algorithm reaches a particular node that has 
no neighbours to visit further, once it reaches that node with no neighbours to
be visited it’ll backtrack to its previous node (say N) and from 
this node N algorithm will start searching 
for unvisited neighbour nodes and starts visiting them.

** DFS : Traversal

DFS is a traversal technique which involves the idea of recursion and 
backtracking. DFS goes in-depth, 
Means :  traverses all nodes by going ahead, and when there are no further 
nodes to traverse in the current path,
then it backtracks on the same path and traverses other unvisited nodes.

In DFS, we start with a node ‘v’, mark it as visited and store it in the 
solution vector.
It is unexplored as its adjacent nodes are not visited.
We run through all the adjacent nodes, and call the recursive dfs function 
to explore the node ‘v’ 
which has not been visited previously. This leads to the exploration of 
another node ‘u’ which is its adjacent node and is not visited. 
The adjacency list stores the list of neighbours for any node. 
Pick the neighbour list of node ‘v’ 
and run a for loop on the list of neighbours 
(say nodes ‘u’ and ‘w’ are in the list). We go in-depth
with each node. 
When node ‘u’ is explored completely then it backtracks and explores node ‘w’.
This traversal terminates when all the nodes are completely explored. 


**DFS Question Samples

1. Number of islands
2. Max Area of islands
3  Count Unique Paths
