A Simple and Straightforward Explanation:

Subarray: It always should be in contiguous form.

For example, lets take an array int arr=[10,20,30,40,50];

-->Now lets see its various combinations:

  subarr=[10,20] //true
  subarr=[10,30] //false, because its not in contiguous form
  subarr=[40,50] //true
Subsequence: which don't need to be in contiguous form but same order.

For example, lets take an array int arr=[10,20,30,40,50];

-->Now lets see its various combinations:

  subseq=[10,20]; //true
  subseq=[10,30]; //true
  subseq=[30,20]; //false, because order isn't maintained
Subset: which mean any possible combinations.

For example, lets take an array int arr=[10,20,30,40,50];

-->Now lets see its various combinations:

  subset={10,20}; //true
  subset={10,30}; //true
  subset={30,20}; //true

Scaler Articles :https://www.scaler.com/topics/difference-between-subarray-subset-and-subsequence/ 
 Overview

	An array is a linear collection of values stored at contiguous memory locations. 
	A subarray is nothing but a slice of these contiguous memory locations of the actual array or 
	we can say that a subarray is nothing but any contiguous part of a given array. 
	A subset is often confused with subarray and subsequence but a subset is nothing but any 
	possible combination of the original array (or a set). Now, a subsequence is a sequence of 
	the elements of the array obtained by deleting some elements of the array. 
	The subsequence should not be confused with the subarray or substring. 
	The subarray or substring is contiguous but a subsequence need not be contiguous.

Difference Between Subarray, Subset and Subsequence :
	Before learning about the difference between subarray, subset, and subsequence, let us first get a 
	brief introduction to arrays.

	An array is a linear collection of values stored at contiguous memory locations. 
	Array stores homogeneous values(similar data type values).

 Some of the important points to keep in mind regarding arrays are as follows:

	The arrays occupy continuous (contiguous) space in the memory.
	The indexing of the array starts with 0 and goes on to (length of array - 1).
	Arrays are of fixed length, i.e. after the creation of an array, we cannot change the 
	size of the array.
	The access of elements is very fast in arrays. We can easily access any element using 
	the index of the array.
	The array os  : 56, 50, 34, 24, 12

Definition of Subarray and Example
 As we know that an array is a linear collection of values stored at contiguous memory locations. 
 So, what is subarray? Well, a subarray is nothing but a slice of these contiguous memory locations 
 of the actual array. In simpler terms, a subarray is nothing but any contiguous part of a given array. The subarray has the same sequence of elements (order of the elements) as it is in the array.

A subarray is also known as a contiguous subarray. Although a subarray is contiguous (continuous) in nature.

Example: Let the array be: arr = [1, 2, 3] Then one subarray of arr can be: subarray = [1, 2] All the sub-arrays of arr are:

[1]
[2]
[3]
[1, 2]
[2, 3]
[1, 2, 3]
So, we conclude that the size of the subarray can range from 1 to the size of the actual array.

Definition of Subset and Example
	A subset is often confused with subarray and subsequence but a subset is nothing but any possible 
	combination of the original array (or a set).

	For example, the subsets of array arr = [1, 2, 3, 4, 5] can be:

	[3, 1]
	[2, 5]
	[1, 2], etc.
	So, we can conclude that subset is the superset of subarrays i.e. all the subarrays are subsets 
	but vice versa is not true.

Definition of Subsequence and Example
	As the name suggests, a subsequence is a sequence of the elements of the array obtained by 
	deleting some elements of the array. One important thing related to the subsequence is that even 
	after deleting some elements, the sequence of the array elements is not changed. Both the string 
	and arrays can have subsequences.

	The subsequence should not be confused with the subarray or substring. The subarray or substring 
	is contiguous but a subsequence need not to be contiguous.

	For example, the subsequences of the array arr : [1, 2, 3, 4] can be:

	[1, 3]
	[2, 3, 4]
	[1, 2, 3, 4], etc.

	Note : Note: A subarray is a subsequence, a subsequence is a subset but the reverse order is not correct.

Number of subarrays, subset, subsequence we can form using a array of size n.: 

	Let us learn how many subsets, subsequences, and subarrays can an array (arr) of size n have.

	As we know, a subarray is a slice of the contiguous memory locations of the array. So, 
	we can have n * (n+1)/2 non-empty subarrays of an array.

	Now, a subset is nothing but any possible combination of the original array (or a set). 
	We can have 2^(size of the array) i.e. 2^n subsets of an array.

	A subsequence is a sequence of the elements of the array obtained by deleting some elements of 
	the array and preserving the order of the array elements. We can have2^n subsequences of an array 
	since we keep the original ordering, this is the same as subsets of an array.

	For example, if the size of the array is 3 then

	The number of subarrays is 6.
	The number of the subsequences is 8.
	The number of subsets is 8.


	** substring
	--consecutive



